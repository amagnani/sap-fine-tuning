apiVersion: ai.sap.com/v1alpha1
kind: ServingTemplate
metadata:
  name: server-phi3-vision # executable ID, must be unique across your SAP AI Core instance, for example use `server-pipeline-yourname-1234`
  annotations:
    scenarios.ai.sap.com/description: "ETest for phi3 vision"
    scenarios.ai.sap.com/name: "phi3-vision"
    executables.ai.sap.com/description: "Create online server to interact with Phi3 Vision"
    executables.ai.sap.com/name: "phi3-vision-serve"
  labels:
    scenarios.ai.sap.com/id: "phi3-vision"
    ai.sap.com/version: "1.0"
spec:
  template:
    apiVersion: "serving.kserve.io/v1beta1"
    metadata:
      annotations: |
        autoscaling.knative.dev/metric: concurrency   # condition when to scale
        autoscaling.knative.dev/target: 1
        autoscaling.knative.dev/targetBurstCapacity: 0
      labels: |
        ai.sap.com/resourcePlan: infer.l # computing power
    spec: |
      predictor:
        imagePullSecrets:
          - name: amagnani   # your docker registry secret
        minReplicas: 1
        maxReplicas: 5    # how much to scale
        containers:
        - name: kserve-container
          image: "docker.io/amagnani/phi3-vision-ai-core:01"
          ports:
            - containerPort: 9001    # customizable port
              protocol: TCP
          command: ["/bin/sh", "-c"]
          args:
            - >
              set -e && echo "Starting" && gunicorn --chdir /app/src server:app -b 0.0.0.0:9001 # filename `server` flask variable `app`
  
